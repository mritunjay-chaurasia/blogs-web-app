{"ast":null,"code":"var _jsxFileName = \"/home/mritunjay/Project/react-node-blog/src/components/Test/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet arrData = [{\n  firstname: \"MK\"\n}, {\n  firstname: \"KK\"\n}, {\n  firstname: \"Mj\"\n}, {\n  firstname: \"RR\"\n}];\nconst TestData = () => {\n  _s();\n  const [nameArr, setNameArr] = useState([]);\n  const [selectedNames, setSelectedNames] = useState([]);\n  useEffect(() => {\n    if (nameArr) {\n      console.log(nameArr);\n    }\n  }, [nameArr]);\n  const handleClickArr = userName => {\n    if (!selectedNames.includes(userName) && !nameArr.some(item => item.firstname === userName)) {\n      setNameArr([...nameArr, {\n        firstname: userName\n      }]);\n      setSelectedNames([...selectedNames, userName]);\n    }\n  };\n  const handleNameClick = userName => {\n    if (!selectedNames.includes(userName)) {\n      setSelectedNames([...selectedNames, userName]);\n    } else {\n      setSelectedNames(selectedNames.filter(name => name !== userName));\n    }\n    handleClickArr(userName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: arrData.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => handleNameClick(item.firstname),\n          className: selectedNames.includes(item.firstname) ? \"user-Name selected\" : \"user-Name\",\n          children: item.firstname\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n_s(TestData, \"yOCvv2X5vcNpJkLvqB9Dr4SS4LQ=\");\n_c = TestData;\nexport default TestData;\nvar _c;\n$RefreshReg$(_c, \"TestData\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","arrData","firstname","TestData","_s","nameArr","setNameArr","selectedNames","setSelectedNames","console","log","handleClickArr","userName","includes","some","item","handleNameClick","filter","name","children","map","index","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mritunjay/Project/react-node-blog/src/components/Test/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./style.css\";\nimport { useState } from \"react\";\nlet arrData = [{ firstname: \"MK\" }, { firstname: \"KK\" }, { firstname: \"Mj\" }, { firstname: \"RR\" }];\n\nconst TestData = () => {\n    const [nameArr, setNameArr] = useState([]);\n    const [selectedNames, setSelectedNames] = useState([]);\n\n    useEffect(() => {\n        if (nameArr) {\n            console.log(nameArr);\n        }\n    }, [nameArr]);\n\n    const handleClickArr = (userName) => {\n        if (!selectedNames.includes(userName) && !nameArr.some(item => item.firstname === userName)) {\n            setNameArr([...nameArr, { firstname: userName }]);\n            setSelectedNames([...selectedNames, userName]);\n        }\n    };\n    \n\n    const handleNameClick = (userName) => {\n        if (!selectedNames.includes(userName)) {\n            setSelectedNames([...selectedNames, userName]);\n        } else {\n            setSelectedNames(selectedNames.filter((name) => name !== userName));\n        }\n        handleClickArr(userName);\n    };\n\n    return (\n        <>\n            {arrData.map((item, index) => {\n                return (\n                  <>\n                      <label\n                        onClick={() => handleNameClick(item.firstname)}\n                        className={selectedNames.includes(item.firstname) ? \"user-Name selected\" : \"user-Name\"}\n                        key={index}\n                    >\n                        {item.firstname}\n                    </label>{\" \"}\n                  </>\n                );\n            })}\n        </>\n    );\n};\n\nexport default TestData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,IAAIC,OAAO,GAAG,CAAC;EAAEC,SAAS,EAAE;AAAK,CAAC,EAAE;EAAEA,SAAS,EAAE;AAAK,CAAC,EAAE;EAAEA,SAAS,EAAE;AAAK,CAAC,EAAE;EAAEA,SAAS,EAAE;AAAK,CAAC,CAAC;AAElG,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,IAAIU,OAAO,EAAE;MACTI,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACxB;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMM,cAAc,GAAIC,QAAQ,IAAK;IACjC,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACD,QAAQ,CAAC,IAAI,CAACP,OAAO,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACb,SAAS,KAAKU,QAAQ,CAAC,EAAE;MACzFN,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAAEH,SAAS,EAAEU;MAAS,CAAC,CAAC,CAAC;MACjDJ,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEK,QAAQ,CAAC,CAAC;IAClD;EACJ,CAAC;EAGD,MAAMI,eAAe,GAAIJ,QAAQ,IAAK;IAClC,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACD,QAAQ,CAAC,EAAE;MACnCJ,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEK,QAAQ,CAAC,CAAC;IAClD,CAAC,MAAM;MACHJ,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKN,QAAQ,CAAC,CAAC;IACvE;IACAD,cAAc,CAACC,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACId,OAAA,CAAAE,SAAA;IAAAmB,QAAA,EACKlB,OAAO,CAACmB,GAAG,CAAC,CAACL,IAAI,EAAEM,KAAK,KAAK;MAC1B,oBACEvB,OAAA,CAAAE,SAAA;QAAAmB,QAAA,gBACIrB,OAAA;UACEwB,OAAO,EAAEA,CAAA,KAAMN,eAAe,CAACD,IAAI,CAACb,SAAS,CAAE;UAC/CqB,SAAS,EAAEhB,aAAa,CAACM,QAAQ,CAACE,IAAI,CAACb,SAAS,CAAC,GAAG,oBAAoB,GAAG,WAAY;UAAAiB,QAAA,EAGtFJ,IAAI,CAACb;QAAS,GAFVmB,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGP,CAAC,EAAC,GAAG;MAAA,eACZ,CAAC;IAET,CAAC;EAAC,gBACJ,CAAC;AAEX,CAAC;AAACvB,EAAA,CA5CID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}