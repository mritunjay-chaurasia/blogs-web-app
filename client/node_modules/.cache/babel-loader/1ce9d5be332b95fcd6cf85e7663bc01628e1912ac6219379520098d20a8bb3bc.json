{"ast":null,"code":"var _jsxFileName = \"/home/mritunjay/Project/react-node-blog/src/components/Test/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicMenu() {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checkedOptions, setCheckedOptions] = React.useState({\n    option1: false,\n    // set to true if you want it checked by default\n    option2: false,\n    option3: false\n  });\n  const [shouldCloseMenu, setShouldCloseMenu] = React.useState(true);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    if (shouldCloseMenu) {\n      setAnchorEl(null);\n    }\n    setShouldCloseMenu(true);\n  };\n  const handleCheckboxToggle = option => () => {\n    setShouldCloseMenu(false);\n    setCheckedOptions({\n      ...checkedOptions,\n      [option]: !checkedOptions[option]\n    });\n  };\n  const [selectionRange, setSelectionRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  });\n  useEffect(() => {\n    console.log(\"sdddddddddddddddddd\", selectionRange);\n  }, [selectionRange]);\n  const handleSelect = ranges => {\n    // ranges is an object with startDate and endDate\n    setSelectionRange(ranges.selection);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: \"basic-button\",\n      \"aria-controls\": anchorEl ? 'basic-menu' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": anchorEl ? 'true' : undefined,\n      onClick: handleClick,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"basic-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n        ranges: [selectionRange],\n        onChange: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicMenu, \"H816zwF9TpK5RZggqdQ8+sHAvXo=\");\n_c = BasicMenu;\nvar _c;\n$RefreshReg$(_c, \"BasicMenu\");","map":{"version":3,"names":["React","useEffect","useState","Button","Menu","MenuItem","Checkbox","ListItemIcon","DateRangePicker","jsxDEV","_jsxDEV","BasicMenu","_s","anchorEl","setAnchorEl","checkedOptions","setCheckedOptions","option1","option2","option3","shouldCloseMenu","setShouldCloseMenu","handleClick","event","currentTarget","handleClose","handleCheckboxToggle","option","selectionRange","setSelectionRange","startDate","Date","endDate","key","console","log","handleSelect","ranges","selection","children","id","undefined","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","onClose","MenuListProps","onChange","_c","$RefreshReg$"],"sources":["/home/mritunjay/Project/react-node-blog/src/components/Test/index.js"],"sourcesContent":["import React ,{useEffect, useState} from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css';\nexport default function BasicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checkedOptions, setCheckedOptions] = React.useState({\n    option1: false, // set to true if you want it checked by default\n    option2: false,\n    option3: false,\n  });\n  const [shouldCloseMenu, setShouldCloseMenu] = React.useState(true);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    if(shouldCloseMenu){\n        setAnchorEl(null);\n    }\n    setShouldCloseMenu(true)\n  };\n\n  const handleCheckboxToggle = (option) => () => {\n    setShouldCloseMenu(false)\n    setCheckedOptions({ ...checkedOptions, [option]: !checkedOptions[option] });\n  };\n\n  const [selectionRange, setSelectionRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection',\n  });\n\n  useEffect(()=>{\n    console.log(\"sdddddddddddddddddd\",selectionRange)\n  },[selectionRange])\n\n  const handleSelect = (ranges) => {\n    // ranges is an object with startDate and endDate\n    setSelectionRange(ranges.selection);\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"basic-button\"\n        aria-controls={anchorEl ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={anchorEl ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        Dashboard\n      </Button>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {/* <MenuItem onClick={handleClose}>\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              checked={checkedOptions.option1}\n              tabIndex={-1}\n              disableRipple\n              onChange={handleCheckboxToggle('option1')}\n            />\n          </ListItemIcon>\n          Option 1\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              checked={checkedOptions.option2}\n              tabIndex={-1}\n              disableRipple\n              onChange={handleCheckboxToggle('option2')}\n            />\n          </ListItemIcon>\n          Option 2\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              checked={checkedOptions.option3}\n              tabIndex={-1}\n              disableRipple\n              onChange={handleCheckboxToggle('option3')}\n            />\n          </ListItemIcon>\n          Option 3\n        </MenuItem> */}\n\n      <DateRangePicker\n        ranges={[selectionRange]}\n        onChange={handleSelect}\n      />\n      </Menu>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}